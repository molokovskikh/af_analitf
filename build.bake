import System.IO
import file from Deploy.bake
import file from WebServiceSupport.bake
import file from Migration.bake
import file from Lib.bake
import file from Db.bake
import file from Test.bake
import file from Tools.bake
import file from Tools.boo


Global(
	Project : "AnalitF",
	humanReadableName : "AnalitF",
	deployTo : """\\adc.analit.net\Inforoom\WebApps\PrgDataService\Results""",
	Platform : "x86"
)


def PrepareCfg(buildName as string):
	File.Delete(".\\src\\AnalitF\\AnalitF_tmp.cfg") if File.Exists(".\\src\\AnalitF\\AnalitF_tmp.cfg")
	File.Move(".\\src\\AnalitF\\AnalitF.cfg", ".\\src\\AnalitF\\AnalitF_tmp.cfg")
	File.Copy(".\\src\\AnalitF\\AnalitF_${buildName}.cfg", ".\\src\\AnalitF\\AnalitF.cfg")
	Rm(FileSet("*.*", BaseDirectory : ".\\src\\AnalitF\\unit"))

def RestoreCfg():
	if (File.Exists(".\\src\\AnalitF\\AnalitF_tmp.cfg")):
		File.Delete(".\\src\\AnalitF\\AnalitF.cfg") if File.Exists(".\\src\\AnalitF\\AnalitF.cfg")
		File.Move(".\\src\\AnalitF\\AnalitF_tmp.cfg", ".\\src\\AnalitF\\AnalitF.cfg")

def BuildAnalitF(buildName as string):
	buildFolder = ".\\src\\AnalitF\\bin\\bin${buildName}"
	Rm("${buildFolder}/*", true) if Exist(buildFolder)
	MkDir(buildFolder) if not Exist(buildFolder)
	try:
		PrepareCfg("Release")
		exec = Exec("C:\\Program Files (x86)\\Borland\\Delphi7\\Bin\\dcc32.exe", "-B AnalitF.dpr")
		exec.BaseDirectory = ".\\src\\AnalitF"
		exec.Execute()
	ensure:
		RestoreCfg()


Task @BuildVMProtect:
	exec = Exec("C:\\Program Files (x86)\\VMProtect Professional\\VMProtect_Con.exe", "AnalitF.exe -pf AnalitF.exe.vmp");
	exec.BaseDirectory = ".\\src\\VMProtect"
	exec.Execute()

Task @BuildRelease:
	BuildAnalitF("Release")

Task @CopyReleaseToProtect:
	File.Copy(".\\src\\AnalitF\\bin\\binRelease\\AnalitF.exe", ".\\src\\VMProtect\\AnalitF.exe", true)
	File.Copy(".\\src\\AnalitF\\bin\\binRelease\\AnalitF.map", ".\\src\\VMProtect\\AnalitF.map", true)
	
Task @BuildAndProtectRelease, [@BuildRelease, @CopyReleaseToProtect, @BuildVMProtect]:
	print "Сборка упакованного релизного приложения завершена"

Task @ShowDiffDataLayer:
	Sh("git log -10 -p \"src/Common/DataLayer/\"")